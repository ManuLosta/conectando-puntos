enum OrderStatus {
  PENDING
  CONFIRMED
  IN_PREPARATION
  IN_TRANSIT
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  PARTIAL
  REJECTED
}

model Order {
  id            String        @id @default(cuid())
  orderNumber   String        @unique
  status        OrderStatus   @default(PENDING)
  paymentStatus PaymentStatus @default(PENDING)
  total         Decimal       @db.Decimal(10, 2)

  // Customer info
  clientId      String?
  salespersonId String?
  distributorId String

  // Delivery info
  deliveryAddress String?
  deliveryDate    DateTime?
  notes           String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  client         FinalClient?  @relation(fields: [clientId], references: [id])
  salesperson    Salesperson?  @relation(fields: [salespersonId], references: [id])
  distributor    Distributor   @relation(fields: [distributorId], references: [id])
  items          OrderItem[]
  stockMovements StockMovement[]

  // Índices para optimización de queries
  @@index([distributorId, createdAt])
  @@index([clientId, distributorId, createdAt])
  @@map("orders")
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Decimal @db.Decimal(10, 2)
  subtotal  Decimal @db.Decimal(10, 2)

  // Relationships
  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  // Índice para optimización de queries por producto
  @@index([productId])
  @@map("order_items")
}